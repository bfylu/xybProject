<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xyb.shop.mapper.xyb.OrderViewCountMapper">
  <resultMap id="BaseResultMap" type="com.xyb.shop.model.xyb.OrderViewCount">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="wait_pay_count" jdbcType="INTEGER" property="waitPayCount" />
    <result column="back_count" jdbcType="INTEGER" property="backCount" />
    <result column="recipien_count" jdbcType="INTEGER" property="recipienCount" />
    <result column="finish_count" jdbcType="INTEGER" property="finishCount" />
    <result column="after_sale_count" jdbcType="INTEGER" property="afterSaleCount" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, open_id, wait_pay_count, back_count, recipien_count, finish_count, after_sale_count, 
    creat_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.xyb.shop.model.xyb.OrderViewCountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_view_count
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_view_count
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order_view_count
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xyb.shop.model.xyb.OrderViewCountExample">
    delete from order_view_count
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xyb.shop.model.xyb.OrderViewCount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_view_count (open_id, wait_pay_count, back_count, 
      recipien_count, finish_count, after_sale_count, 
      creat_time, update_time)
    values (#{openId,jdbcType=VARCHAR}, #{waitPayCount,jdbcType=INTEGER}, #{backCount,jdbcType=INTEGER}, 
      #{recipienCount,jdbcType=INTEGER}, #{finishCount,jdbcType=INTEGER}, #{afterSaleCount,jdbcType=INTEGER}, 
      #{creatTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xyb.shop.model.xyb.OrderViewCount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_view_count
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="openId != null">
        open_id,
      </if>
      <if test="waitPayCount != null">
        wait_pay_count,
      </if>
      <if test="backCount != null">
        back_count,
      </if>
      <if test="recipienCount != null">
        recipien_count,
      </if>
      <if test="finishCount != null">
        finish_count,
      </if>
      <if test="afterSaleCount != null">
        after_sale_count,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="waitPayCount != null">
        #{waitPayCount,jdbcType=INTEGER},
      </if>
      <if test="backCount != null">
        #{backCount,jdbcType=INTEGER},
      </if>
      <if test="recipienCount != null">
        #{recipienCount,jdbcType=INTEGER},
      </if>
      <if test="finishCount != null">
        #{finishCount,jdbcType=INTEGER},
      </if>
      <if test="afterSaleCount != null">
        #{afterSaleCount,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xyb.shop.model.xyb.OrderViewCountExample" resultType="java.lang.Long">
    select count(*) from order_view_count
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_view_count
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.waitPayCount != null">
        wait_pay_count = #{record.waitPayCount,jdbcType=INTEGER},
      </if>
      <if test="record.backCount != null">
        back_count = #{record.backCount,jdbcType=INTEGER},
      </if>
      <if test="record.recipienCount != null">
        recipien_count = #{record.recipienCount,jdbcType=INTEGER},
      </if>
      <if test="record.finishCount != null">
        finish_count = #{record.finishCount,jdbcType=INTEGER},
      </if>
      <if test="record.afterSaleCount != null">
        after_sale_count = #{record.afterSaleCount,jdbcType=INTEGER},
      </if>
      <if test="record.creatTime != null">
        creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_view_count
    set id = #{record.id,jdbcType=BIGINT},
      open_id = #{record.openId,jdbcType=VARCHAR},
      wait_pay_count = #{record.waitPayCount,jdbcType=INTEGER},
      back_count = #{record.backCount,jdbcType=INTEGER},
      recipien_count = #{record.recipienCount,jdbcType=INTEGER},
      finish_count = #{record.finishCount,jdbcType=INTEGER},
      after_sale_count = #{record.afterSaleCount,jdbcType=INTEGER},
      creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xyb.shop.model.xyb.OrderViewCount">
    update order_view_count
    <set>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="waitPayCount != null">
        wait_pay_count = #{waitPayCount,jdbcType=INTEGER},
      </if>
      <if test="backCount != null">
        back_count = #{backCount,jdbcType=INTEGER},
      </if>
      <if test="recipienCount != null">
        recipien_count = #{recipienCount,jdbcType=INTEGER},
      </if>
      <if test="finishCount != null">
        finish_count = #{finishCount,jdbcType=INTEGER},
      </if>
      <if test="afterSaleCount != null">
        after_sale_count = #{afterSaleCount,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xyb.shop.model.xyb.OrderViewCount">
    update order_view_count
    set open_id = #{openId,jdbcType=VARCHAR},
      wait_pay_count = #{waitPayCount,jdbcType=INTEGER},
      back_count = #{backCount,jdbcType=INTEGER},
      recipien_count = #{recipienCount,jdbcType=INTEGER},
      finish_count = #{finishCount,jdbcType=INTEGER},
      after_sale_count = #{afterSaleCount,jdbcType=INTEGER},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>